{
"version":3,
"file":"module$node_modules$antd$es$_util$type.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,uCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAGxHC,MAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAIYJ,QAAAK,MAAA,CAAgBC,QAAc,EAAG,CAC3C,IAD2C,IAClCC,KAAOC,SAAAC,OAD2B,CACTC,KAAWC,KAAJ,CAAUJ,IAAV,CADE,CACeK,KAAO,CAAjE,CAAoEA,IAApE,CAA2EL,IAA3E,CAAiFK,IAAA,EAAjF,CACEF,IAAA,CAAKE,IAAL,CAAA,CAAaJ,SAAA,CAAUI,IAAV,CAGf,OAAOF,KALoC,CAO9BV,QAAAa,SAAA,CAAmBC,QAAiB,EAAG,CACpD,IADoD,IAC3CC,MAAQP,SAAAC,OADmC,CACjBC,KAAWC,KAAJ,CAAUI,KAAV,CADU,CACQC,MAAQ,CAApE,CAAuEA,KAAvE,CAA+ED,KAA/E,CAAsFC,KAAA,EAAtF,CACEN,IAAA,CAAKM,KAAL,CAAA,CAAcR,SAAA,CAAUQ,KAAV,CAGhB,OAAON,KAL6C,CAdkE;",
"sources":["node_modules/antd/es/_util/type.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$es$_util$type\"] = function(global,process,require,module,exports,shadow$shims) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nvar tuple = exports.tuple = function tuple() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return args;\n};\nvar tupleNum = exports.tupleNum = function tupleNum() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return args;\n};\n//# sourceMappingURL=type.js.map\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Object","defineProperty","value","tuple","exports.tuple","_len","arguments","length","args","Array","_key","tupleNum","exports.tupleNum","_len2","_key2"]
}
