shadow$provide.module$node_modules$core_js$library$modules$_iter_define=function(global,process,require,module,exports,shadow$shims){var LIBRARY=require("module$node_modules$core_js$library$modules$_library"),$export=require("module$node_modules$core_js$library$modules$_export"),redefine=require("module$node_modules$core_js$library$modules$_redefine"),hide=require("module$node_modules$core_js$library$modules$_hide"),Iterators=require("module$node_modules$core_js$library$modules$_iterators"),$iterCreate=
require("module$node_modules$core_js$library$modules$_iter_create"),setToStringTag=require("module$node_modules$core_js$library$modules$_set_to_string_tag"),getPrototypeOf=require("module$node_modules$core_js$library$modules$_object_gpo"),ITERATOR=require("module$node_modules$core_js$library$modules$_wks")("iterator"),BUGGY=!([].keys&&"next"in[].keys()),returnThis=function(){return this};module.exports=function(Base,NAME,Constructor,next,DEFAULT,IS_SET,FORCED){$iterCreate(Constructor,NAME,next);next=
function(kind){return!BUGGY&&kind in proto?proto[kind]:function(){return new Constructor(this,kind)}};var TAG=NAME+" Iterator",DEF_VALUES="values"==DEFAULT,VALUES_BUG=!1,proto=Base.prototype,$native=proto[ITERATOR]||proto["@@iterator"]||DEFAULT&&proto[DEFAULT],$default=$native||next(DEFAULT),$entries=DEFAULT?DEF_VALUES?next("entries"):$default:void 0,$anyNative="Array"==NAME?proto.entries||$native:$native,key;$anyNative&&(Base=getPrototypeOf($anyNative.call(new Base)),Base!==Object.prototype&&Base.next&&
(setToStringTag(Base,TAG,!0),LIBRARY||"function"==typeof Base[ITERATOR]||hide(Base,ITERATOR,returnThis)));DEF_VALUES&&$native&&"values"!==$native.name&&(VALUES_BUG=!0,$default=function(){return $native.call(this)});LIBRARY&&!FORCED||!BUGGY&&!VALUES_BUG&&proto[ITERATOR]||hide(proto,ITERATOR,$default);Iterators[NAME]=$default;Iterators[TAG]=returnThis;if(DEFAULT){var methods={values:DEF_VALUES?$default:next("values"),keys:IS_SET?$default:next("keys"),entries:$entries};if(FORCED)for(key in methods)key in
proto||redefine(proto,key,methods[key]);else $export($export.P+$export.F*(BUGGY||VALUES_BUG),NAME,methods)}return methods}}
//# sourceMappingURL=module$node_modules$core_js$library$modules$_iter_define.js.map
