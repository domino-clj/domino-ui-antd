{"version":3,"sources":["syn_antd/select.cljs"],"mappings":";;;;AAKA,AAAKA,AAAO,AAACC,AAA+BC;AAE5C,AAAKC,AAAiB,AAACF,AAA+B,AAAYC;AAElE,AAAKE,AAAc,AAACH,AAA+B,AAAUC;AAE7D,AAAA,AAAMG,AAAmBC,AAAMC,AAASC;AAAxC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACS,AAAA,AAAoB,AAACF,AAAAA,AAAAA,AAAME,AAAAA,AACjCJ,AACW,AAACE,AAAAA,AAAAA,AAAME,AAAAA,AACP,AAACF,AAAAA,AAAAA,AAAME,AAAAA,AACP,AAACD,AAAAA,AAAAA,AAASC,AAAAA,AACV,AAAA,AAAYA,AACvB,AAACD,AAAAA,AAAAA,AAASC,AAAAA;;AAEb,AAAA,AAAAC,AAAMO;AAAN,AAAA,AAAAN,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAA2BO;AAA3B,AAAAF,AAAAL,AAAA,AAAA,AAAmCJ;AAAnC,AAAAS,AAAAL,AAAA,AAAA,AAAyCH;AAAzC,AAGE,AAAMW,AAAU,AAACC,AAAQd,AAAkBC,AAAMC;AAAjD,AACE,AAACa,AAAIF,AAAUD","names":["syn-antd.select/select","reagent.core/adapt-react-class","js/module$node_modules$antd$es$select$index.default","syn-antd.select/select-opt-group","syn-antd.select/select-option","syn-antd.select/ant-select-option","id-fn","label-fn","option","p__37490","map__37491","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.core.get.cljs$core$IFn$_invoke$arity$3","syn-antd.select/ant-options","options","option-fn","cljs.core.partial.cljs$core$IFn$_invoke$arity$3","cljs.core.map.cljs$core$IFn$_invoke$arity$2"],"sourcesContent":["(ns syn-antd.select\n  (:require\n    [reagent.core]\n    [\"antd/es/select\" :default ant-select]))\n\n(def select (reagent.core/adapt-react-class ant-select))\n\n(def select-opt-group (reagent.core/adapt-react-class (.-OptGroup ant-select)))\n\n(def select-option (reagent.core/adapt-react-class (.-Option ant-select)))\n\n(defn ant-select-option [id-fn label-fn option]\n  ^{:key (str \"antd-option-\" (id-fn option))}\n  [select-option\n   {:key      (id-fn option)\n    :value    (id-fn option)\n    :title    (label-fn option)\n    :disabled (:disabled? option)}\n   (label-fn option)])\n\n(defn ant-options [{:keys [options id-fn label-fn]\n                    :or   {id-fn    :id\n                           label-fn :label}}]\n  (let [option-fn (partial ant-select-option id-fn label-fn)]\n    (map option-fn options)))"]}