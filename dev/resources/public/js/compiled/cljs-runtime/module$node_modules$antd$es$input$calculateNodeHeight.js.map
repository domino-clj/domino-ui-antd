{
"version":3,
"file":"module$node_modules$antd$es$input$calculateNodeHeight.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/antd/es/input/calculateNodeHeight.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$es$input$calculateNodeHeight\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateNodeStyling = calculateNodeStyling;\nexports.default = calculateNodeHeight;\n// Thanks to https://github.com/andreypopp/react-textarea-autosize/\n\n/**\n * calculateNodeHeight(uiTextNode, useCache = false)\n */\nvar HIDDEN_TEXTAREA_STYLE = \"\\n  min-height:0 !important;\\n  max-height:none !important;\\n  height:0 !important;\\n  visibility:hidden !important;\\n  overflow:hidden !important;\\n  position:absolute !important;\\n  z-index:-1000 !important;\\n  top:0 !important;\\n  right:0 !important\\n\";\nvar SIZING_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'font-variant', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing'];\nvar computedStyleCache = {};\nvar hiddenTextarea;\nfunction calculateNodeStyling(node) {\n  var useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var nodeRef = node.getAttribute('id') || node.getAttribute('data-reactid') || node.getAttribute('name');\n\n  if (useCache && computedStyleCache[nodeRef]) {\n    return computedStyleCache[nodeRef];\n  }\n\n  var style = window.getComputedStyle(node);\n  var boxSizing = style.getPropertyValue('box-sizing') || style.getPropertyValue('-moz-box-sizing') || style.getPropertyValue('-webkit-box-sizing');\n  var paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));\n  var borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));\n  var sizingStyle = SIZING_STYLE.map(function (name) {\n    return \"\".concat(name, \":\").concat(style.getPropertyValue(name));\n  }).join(';');\n  var nodeInfo = {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize,\n    boxSizing: boxSizing\n  };\n\n  if (useCache && nodeRef) {\n    computedStyleCache[nodeRef] = nodeInfo;\n  }\n\n  return nodeInfo;\n}\nfunction calculateNodeHeight(uiTextNode) {\n  var useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var minRows = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var maxRows = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    document.body.appendChild(hiddenTextarea);\n  } // Fix wrap=\"off\" issue\n  // https://github.com/ant-design/ant-design/issues/6577\n\n\n  if (uiTextNode.getAttribute('wrap')) {\n    hiddenTextarea.setAttribute('wrap', uiTextNode.getAttribute('wrap'));\n  } else {\n    hiddenTextarea.removeAttribute('wrap');\n  } // Copy all CSS properties that have an impact on the height of the content in\n  // the textbox\n\n\n  var _calculateNodeStyling = calculateNodeStyling(uiTextNode, useCache),\n      paddingSize = _calculateNodeStyling.paddingSize,\n      borderSize = _calculateNodeStyling.borderSize,\n      boxSizing = _calculateNodeStyling.boxSizing,\n      sizingStyle = _calculateNodeStyling.sizingStyle; // Need to have the overflow attribute to hide the scrollbar otherwise\n  // text-lines will not calculated properly as the shadow will technically be\n  // narrower for content\n\n\n  hiddenTextarea.setAttribute('style', \"\".concat(sizingStyle, \";\").concat(HIDDEN_TEXTAREA_STYLE));\n  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || '';\n  var minHeight = Number.MIN_SAFE_INTEGER;\n  var maxHeight = Number.MAX_SAFE_INTEGER;\n  var height = hiddenTextarea.scrollHeight;\n  var overflowY;\n\n  if (boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    height += borderSize;\n  } else if (boxSizing === 'content-box') {\n    // remove padding, since height = content\n    height -= paddingSize;\n  }\n\n  if (minRows !== null || maxRows !== null) {\n    // measure height of a textarea with a single row\n    hiddenTextarea.value = ' ';\n    var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n\n    if (minRows !== null) {\n      minHeight = singleRowHeight * minRows;\n\n      if (boxSizing === 'border-box') {\n        minHeight = minHeight + paddingSize + borderSize;\n      }\n\n      height = Math.max(minHeight, height);\n    }\n\n    if (maxRows !== null) {\n      maxHeight = singleRowHeight * maxRows;\n\n      if (boxSizing === 'border-box') {\n        maxHeight = maxHeight + paddingSize + borderSize;\n      }\n\n      overflowY = height > maxHeight ? '' : 'hidden';\n      height = Math.min(maxHeight, height);\n    }\n  }\n\n  return {\n    height: height,\n    minHeight: minHeight,\n    maxHeight: maxHeight,\n    overflowY: overflowY\n  };\n}\n//# sourceMappingURL=calculateNodeHeight.js.map\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","calculateNodeStyling","node","useCache","arguments","length","undefined","nodeRef","getAttribute","computedStyleCache","style","window","getComputedStyle","boxSizing","getPropertyValue","paddingSize","parseFloat","borderSize","nodeInfo","sizingStyle","SIZING_STYLE","map","name","concat","join","Object","defineProperty","value","default","calculateNodeHeight","uiTextNode","minRows","maxRows","hiddenTextarea","document","createElement","body","appendChild","setAttribute","removeAttribute","_calculateNodeStyling","HIDDEN_TEXTAREA_STYLE","placeholder","minHeight","Number","MIN_SAFE_INTEGER","maxHeight","MAX_SAFE_INTEGER","height","scrollHeight","singleRowHeight","Math","max","overflowY","min"]
}
