shadow$provide.module$node_modules$$ant_design$colors$lib$generate=function(global,process,require,module,exports,shadow$shims){function getHue(hsv,i,light){hsv=60<=Math.round(hsv.h)&&240>=Math.round(hsv.h)?light?Math.round(hsv.h)-2*i:Math.round(hsv.h)+2*i:light?Math.round(hsv.h)+2*i:Math.round(hsv.h)-2*i;0>hsv?hsv+=360:360<=hsv&&(hsv-=360);return hsv}function getSaturation(hsv,i,light){if(0===hsv.h&&0===hsv.s)return hsv.s;hsv=light?Math.round(100*hsv.s)-16*i:4===i?Math.round(100*hsv.s)+16:Math.round(100*
hsv.s)+5*i;100<hsv&&(hsv=100);light&&5===i&&10<hsv&&(hsv=10);6>hsv&&(hsv=6);return hsv}global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};Object.defineProperty(exports,"__esModule",{value:!0});var tinycolor2_1=global(require("module$node_modules$tinycolor2$tinycolor"));exports.default=function(color){var patterns=[];color=tinycolor2_1.default(color);for(var i=5;0<i;--i){var hsv=color.toHsv();hsv=tinycolor2_1.default({h:getHue(hsv,i,!0),s:getSaturation(hsv,
i,!0),v:Math.round(100*hsv.v)+5*i}).toHexString();patterns.push(hsv)}patterns.push(color.toHexString());for(i=1;4>=i;i+=1)hsv=color.toHsv(),hsv=tinycolor2_1.default({h:getHue(hsv,i),s:getSaturation(hsv,i),v:Math.round(100*hsv.v)-15*i}).toHexString(),patterns.push(hsv);return patterns}}
//# sourceMappingURL=module$node_modules$$ant_design$colors$lib$generate.js.map
